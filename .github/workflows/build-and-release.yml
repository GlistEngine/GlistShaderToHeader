name: Build and Release

on:
  push:
    tags:
      - 'v*' # Triggers the workflow on new version tags

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Set up CMake
      uses: jwlawson/actions-setup-cmake@v2

    - name: Build on Linux
      run: |
        mkdir -p build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . --config Release
    
    - run: mv build/GlistShaderToHeader build/GlistShaderToHeader-linux-x86_64
    - name: Upload Linux binary
      uses: actions/upload-artifact@v3
      with:
        name: linux-binary
        path: build/GlistShaderToHeader-linux-x86_64

  build-macos:
    runs-on: macos-latest
    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Set up CMake
      uses: jwlawson/actions-setup-cmake@v2

    - name: Build on macOS
      run: |
        mkdir -p build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . --config Release
    
    - run: mv build/GlistShaderToHeader build/GlistShaderToHeader-macos-universal
    - name: Upload macOS binary
      uses: actions/upload-artifact@v3
      with:
        name: macos-binary
        path: build/GlistShaderToHeader-macos-universal

  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Set up CMake
      uses: jwlawson/actions-setup-cmake@v2

    - name: Build on Windows
      run: |
        mkdir -p build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        cmake --build . --config Release

    - run: mv build/Release/GlistShaderToHeader.exe build/GlistShaderToHeader-win-x86_64.exe
    - name: Upload Windows binary
      uses: actions/upload-artifact@v3
      with:
        name: windows-binary
        path: build/GlistShaderToHeader-win-x86_64.exe

  release:
    permissions: write-all
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    steps:
    - name: Download Linux binary
      uses: actions/download-artifact@v4.1.7
      with:
        name: linux-binary
        path: linux

    - name: Download macOS binary
      uses: actions/download-artifact@v4.1.7
      with:
        name: macos-binary
        path: macos

    - name: Download Windows binary
      uses: actions/download-artifact@v4.1.7
      with:
        name: windows-binary
        path: windows

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload release artifacts
      uses: Roang-zero1/github-upload-release-artifacts-action@v2
      with:
        args: "windows/ linux/ macos/"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
